from aiogram.types import LabeledPrice, Message, PreCheckoutQuery, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram import Bot
from dotenv import load_dotenv
import os
import time
from foto.models import Client

load_dotenv()
BOT_TOKEN = os.getenv('BOT_TOKEN')
bot = Bot(BOT_TOKEN)


async def order(message: Message):
    chat_id = message.chat.id
    await bot.send_message(
        chat_id=chat_id,
        text='ü§ñüí¨: _- —Ä–µ–∫–æ–º–µ–Ω–¥—É—é —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∫–∞—Ä—Ç—ã –¥–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–µ–≥–æ –≤–≤–æ–¥–∞_\n \
        \n \
        –î–ª—è –æ–ø–ª–∞—Ç—ã –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –¥–∞–Ω–Ω—ã–µ —Ç–µ—Å—Ç–æ–≤–æ–π –∫–∞—Ä—Ç—ã: 1111 1111 1111 1026, 12/22, CVC 000',
        parse_mode="Markdown"
        )
    await bot.send_invoice(
        chat_id=chat_id,    
        title='–ü–æ–∫—É–ø–∫–∞ —á–µ—Ä–µ–∑ Telegram –±–æ—Ç(–Æ–ö–∞ssa)',
        description=' –¢—É—Ç –æ–ø–∏—Å–∞–Ω–∏–µ –ø–æ–∫—É–ø–∞–µ–º–æ–≥–æ –ø—Ä–æ–¥—É–∫—Ç–∞(—Å–æ–∑–¥–∞–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏)',
        payload='Patment through a bot',
        provider_token='381764678:TEST:87816',
        currency='rub',
        prices={
            LabeledPrice(
                label='Working Time Machine',
                amount=10000
            ),
            LabeledPrice(
                label='Gift wrapping',
                amount=100
            )
        },
        #max_tip_amount=500,
        #suggested_tip_amounts=[100, 200],
        start_parameter='nztcoder',
        #=None,
        #photo_url=None,
        #photo_size=None,
        #photo_width=None,
        #photo_height=None,
        #need_name=True,
        #need_phone_number=True,
        #need_email=True,
        #nees_shipping_address=False,
        #send_phone_number_to_provider=False,
        #send_email_to_provider=False,
        #is_flexible=False,
        #disable_notification=False,
        #protect_ontent=False,
        #reply_to_message_id=None,
        #allow_sending_without_reply=True,
        #reply_markup=None,
        #request_timeout=15
    )


async def successful_payment(message: Message):
    msg = f'üíµ –°–ø–∞—Å–∏–±–æ –∑–∞ –æ–ø–ª–∞—Ç—É {message.successful_payment.total_amount // 100} {message.successful_payment.currency}.' \
        f'\r\n - –ù–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä –ø–æ–ª—á–∏–ª –∑–∞—è–≤–∫—É –∏ —É–∂–µ –Ω–∞–±–∏—Ä–∞–µ—Ç –í–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞.'
    # –°–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–æ–¥–∞–≤—Ü—É –æ–± –æ–ø–ª–∞—Ç–µ –ø—Ä–æ–¥—É–∫—Ç–∞.
    bt_da = InlineKeyboardButton(
        text='üîÜ DA üîÜ',
        callback_data=f'da_pay/1'
        )
    inline_keyboard = InlineKeyboardMarkup()
    bt_line1 = [bt_da]
    user_id = message.chat.id
    client = Client.objects.get(id=user_id)
    
    if client.dacoin_pay == False:
        inline_keyboard.add(*bt_line1)
    await message.answer(msg)
    await message.answer(
        text='ü§ñüí¨: _- –ú—ã –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–ª–∏ –æ–ª–∞—Ç—ã —á–µ—Ä–µ–∑ –Ækassa, –Ω–æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø—Ä–∏–µ–º–∞ –ø–ª–∞—Ç–µ–∂–µ–π –µ—Å—Ç—å:\n- –°–±–µ—Ä\n- –Æ–ö–∞—Å—Å–∞\n- Bank 131\n- PayMaster\n- –ü–°–ë\n- Robokassa\n- PayBox.money\n- Redsys\n- Stripe\n- Paycom.Uz\n- CLICK Uzbekistan\n- Tranzzo\n- ECOMMPAY\n- –ò –º–Ω–æ–≥–æ–µ –¥—Ä—É–≥–æ–µ.._',
        parse_mode="Markdown",
        reply_markup=inline_keyboard
        )

async def pre_checkout(pre_checkout_query: PreCheckoutQuery):
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –ø—Ä–æ–¥–∞–≤—Ü—É –æ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Ç–æ–≤–∞—Ä–∞
    # –ï—Å–ª–∏ –ø–æ–ª—É—á–∞–µ–º –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç, –∑–∞–ø—É—Å–∫–∞–µ–º —Å–ª–µ–¥—É—é—â—É—é —Ñ—É–Ω–∫—Ü–∏—é
    await bot.answer_pre_checkout_query(pre_checkout_query.id, ok=True)
